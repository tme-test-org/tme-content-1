name: Check for upstream changes
on:
  schedule:
    - cron: "*/5 * * * *" #Run check every 5 minutes
  repository_dispatch:
    types: [coda-action] #Manual triggered from Coda

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check upstream versions set
        id: check-versions-set
        run: |
          echo ::set-output name=cb-exists::false
          test -f .github/upstream_versions/cb.txt && echo ::set-output name=cb-exists::true
          echo ::set-output name=ctb-exists::false
          test -f .github/upstream_versions/ctb.txt && echo ::set-output name=ctb-exists::true
      
      - name: Create cb version file
        if: steps.check-versions-set.outputs.cb-exists == 'false'
        run: |      
          echo "CB version file does not exist."

      - name: Create ctb version file
        if: steps.check-versions-set.outputs.ctb-exists == 'false'
        run: |      
          echo "CTB version file does not exist."   

      - name: Fetch release version
        run: |
          curl -sL https://api.github.com/repos/tme-test-org/tme-cb-1/releases/latest | \
          jq -r ".tag_name" > test.txt
          cat test.txt
          echo ::set-output name=upstream-version::$([ -z "curl -sL https://api.github.com/repos/tme-test-org/tme-cb-1/releases/latest | jq -r ".tag_name" > test.txt"])
      # - name: Check for modified files
      #   id: git-check
      #   run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
      # - name: Commit latest release version
      #   # if: steps.git-check.outputs.modified == 'true'
      #   run: |
      #     git config --global user.name 'Your Name'
      #     git config --global user.email 'your-email@users.noreply.github.com'
      #     git commit -am "New release version"
      #     git push

