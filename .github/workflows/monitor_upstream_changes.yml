name: Check for upstream changes
on:
  schedule:
    - cron: "*/5 * * * *" #Run check every 5 minutes
  repository_dispatch:
    types: [coda-action] #Manual triggered from Coda

env:
  ORG_NAME: ${{ vars.ORG_NAME }}
  CB: ${{ vars.CB }}
  CBT: ${{ vars.CBT }}

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test env vars
        run: |
          echo "Org name: $ORG_NAME"
          echo "CB: $CB"
          echo "CTB: $CTB"

      - name: Check upstream versions set
        id: check-versions-set
        run: |
          echo "cb-exists=false" >> $GITHUB_OUTPUT
          test -f .github/upstream_versions/cb.txt && echo "cb-exists=true" >> $GITHUB_OUTPUT
          echo "ctb-exists=false" >> $GITHUB_OUTPUT
          test -f .github/upstream_versions/ctb.txt && echo "ctb-exists=true" >> $GITHUB_OUTPUT
      
      - name: Create cb version file if does not yet exist
        if: steps.check-versions-set.outputs.cb-exists == 'false'
        run: |      
          echo "CB version file does not exist."
          curl -sL https://api.github.com/repos/$ORG_NAME/$CB/releases/latest | \
          jq -r ".tag_name" > .github/upstream_versions/cb.txt
          git config --global user.name 'Automated Script'
          git config --global user.email 'your-email@users.noreply.github.com'
          git add .github/upstream_versions/cb.txt
          git commit -m "Create upstream CB version file."
          git push          

      - name: Create ctb version file if does not yet exist
        if: steps.check-versions-set.outputs.ctb-exists == 'false'
        run: |      
          echo "CTB version file does not exist."
          curl -sL https://api.github.com/repos/$ORG_NAME/$CTB/releases/latest | \
          jq -r ".tag_name" > .github/upstream_versions/ctb.txt
          git config --global user.name 'Automated Script'
          git config --global user.email 'your-email@users.noreply.github.com'
          git add .github/upstream_versions/ctb.txt
          git commit -m "Create upstream CTB version files."
          git push          

      - name: Fetch release version
        run: |
          curl -sL https://api.github.com/repos/$ORG_NAME/$CB/releases/latest | \
          jq -r ".tag_name" > test.txt
          cat test.txt
          echo upstream-version=$(curl -sL https://api.github.com/repos/$ORG_NAME/$CB/releases/latest | jq -r ".tag_name") >> $GITHUB_OUTPUT
      # - name: Check for modified files
      #   id: git-check
      #   run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
      # - name: Commit latest release version
      #   # if: steps.git-check.outputs.modified == 'true'
      #   run: |
      #     git config --global user.name 'Your Name'
      #     git config --global user.email 'your-email@users.noreply.github.com'
      #     git commit -am "New release version"
      #     git push

